/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */

/**
 *
 * @author MoaathAlrajab
 */

import java.util.Scanner;

 public class Homework09 {

    // ToDo 01:  Write an algorithm to solve the following problem
    /*
    The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over one hundred divisors?

    */

        static int divisorCount(int targetDivisors) {
            int n = 1;
            int tri = 0;
            while (true) {
                tri = tri + n;
                n = n + 1;

                int count = 0;
                int d = 1;
                while (d <= tri) {
                    if (tri % d == 0) {
                        count = count + 1;
                    }
                    d = d + 1;
                }

                if (count > targetDivisors) {
                    return tri;
                }
            }
        }

        public static void main(String[] args) {
            
            Scanner scanner = new Scanner(System.in);
            System.out.println("What is your target divisor?");
            int target = scanner.nextInt();
            System.out.println(divisorCount(target));
        }
    }




